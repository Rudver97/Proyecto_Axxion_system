-- MySQL Script generated by MySQL Workbench
-- Tue Sep  2 19:24:15 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
-- -----------------------------------------------------
-- Schema Inventario_axxion
-- -----------------------------------------------------
drop database if exists Inventario_axxion;
CREATE SCHEMA  Inventario_axxion DEFAULT CHARACTER SET utf8 ;
USE Inventario_axxion ;

-- ----------------------------------------------------

-- -----------------------------------------------------
-- Usamos nombres de tabla en plural y minúscula para consistencia.
CREATE TABLE categorias (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(200) NOT NULL,
  -- TINYINT(1) es el estándar para booleanos (1=activo, 0=inactivo).
  -- El nombre "descripcion" ahora coincide con el tipo de dato TEXT.
  descripcion TEXT NULL,
  activo BOOLEAN NOT NULL DEFAULT 1,
  -- Campos para auditoría, muy recomendables.
  fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  fecha_modificacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

CREATE TABLE subcategorias (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(200) NOT NULL,
  categoria_id INT NOT NULL,
  -- Eliminamos la columna VARCHAR redundante.
  CONSTRAINT fk_subcategoria_categoria
    FOREIGN KEY (categoria_id) REFERENCES categorias(id)
) ENGINE=InnoDB;

-- Esta es la tabla central. No debe tener IDs de tablas de movimiento.
CREATE TABLE productos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(255) NOT NULL,
  detalle TEXT NULL,
  -- Usamos un ENUM para estados, es más claro que un número.
  estado ENUM('disponible', 'alquilado', 'en_mantenimiento', 'retirado') NOT NULL DEFAULT 'disponible',
  stock INT NOT NULL DEFAULT 0, -- El stock es un atributo del producto.
  subcategoria_id INT NOT NULL,
  CONSTRAINT fk_producto_subcategoria
    FOREIGN KEY (subcategoria_id) REFERENCES subcategorias(id)
) ENGINE=InnoDB;

CREATE TABLE proveedores (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(200) NOT NULL,
  telefono VARCHAR(50) NULL,
  direccion TEXT NULL,
  activo BOOLEAN NOT NULL DEFAULT 1
) ENGINE=InnoDB;

-- Esta tabla representa la entrada de productos al inventario.
CREATE TABLE entradas_inventario (
  id INT AUTO_INCREMENT PRIMARY KEY,
  producto_id INT NOT NULL,
  proveedor_id INT NULL, -- Puede haber entradas que no vengan de un proveedor.
  cantidad INT NOT NULL,
  -- La fecha se almacena con el tipo correcto.
  fecha_entrada DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_entrada_producto
    FOREIGN KEY (producto_id) REFERENCES productos(id),
  CONSTRAINT fk_entrada_proveedor
    FOREIGN KEY (proveedor_id) REFERENCES proveedores(id)
) ENGINE=InnoDB;


CREATE TABLE clientes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(200) NOT NULL,
  telefono VARCHAR(50) NULL,
  email VARCHAR(100) UNIQUE NULL,
  direccion TEXT NULL
) ENGINE=InnoDB;

-- Un alquiler es un "contrato" o "evento" principal.
CREATE TABLE alquileres (
  id INT AUTO_INCREMENT PRIMARY KEY,
  cliente_id INT NOT NULL,
  -- Fechas con tipos correctos.
  fecha_salida DATETIME NOT NULL,
  fecha_retorno_esperada DATE NOT NULL,
  fecha_retorno_real DATETIME NULL, -- NULL hasta que se devuelve.
  estado ENUM('activo', 'completado', 'atrasado') NOT NULL DEFAULT 'activo',
  CONSTRAINT fk_alquiler_cliente
    FOREIGN KEY (cliente_id) REFERENCES clientes(id)
) ENGINE=InnoDB;

-- Una tabla intermedia para detallar qué productos se alquilaron en cada alquiler.
-- Esto permite alquilar varios productos en una sola transacción.
CREATE TABLE alquiler_detalles (
    id INT AUTO_INCREMENT PRIMARY KEY,
    alquiler_id INT NOT NULL,
    producto_id INT NOT NULL,
    cantidad INT NOT NULL DEFAULT 1,
    precio_alquiler DECIMAL(10, 2) NOT NULL,
    CONSTRAINT fk_detalle_alquiler
        FOREIGN KEY (alquiler_id) REFERENCES alquileres(id),
    CONSTRAINT fk_detalle_producto
        FOREIGN KEY (producto_id) REFERENCES productos(id)
) ENGINE=InnoDB;


CREATE TABLE mantenimientos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  producto_id INT NOT NULL,
  -- Opcional: Para saber qué técnico realizó el mantenimiento.
  -- usuario_id_tecnico INT NULL,
  tipo_mantenimiento VARCHAR(100) NOT NULL,
  descripcion TEXT NOT NULL,
  costo DECIMAL(10, 2) NOT NULL,
  fecha_inicio DATE NOT NULL,
  fecha_fin DATE NULL,
  CONSTRAINT fk_mantenimiento_producto
    FOREIGN KEY (producto_id) REFERENCES productos(id)
  -- CONSTRAINT fk_mantenimiento_usuario FOREIGN KEY (usuario_id_tecnico) REFERENCES usuarios(id)
) ENGINE=InnoDB;

CREATE TABLE roles (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre_rol VARCHAR(50) NOT NULL UNIQUE
) ENGINE=InnoDB;

CREATE TABLE usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  correo_electronico VARCHAR(100) NOT NULL UNIQUE,
  -- Columna para el HASH de la contraseña.
  password_hash VARCHAR(255) NOT NULL,
  rol_id INT NOT NULL,
  -- Un usuario puede estar asociado a un cliente, pero no tiene por qué.
  cliente_id INT NULL,
  activo BOOLEAN NOT NULL DEFAULT 1,
  -- Se eliminan las claves foráneas confusas.
  CONSTRAINT fk_usuario_rol
    FOREIGN KEY (rol_id) REFERENCES roles(id),
  CONSTRAINT fk_usuario_cliente
    FOREIGN KEY (cliente_id) REFERENCES clientes(id)
) ENGINE=InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
